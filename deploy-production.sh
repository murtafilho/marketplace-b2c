#!/bin/bash

# Script de Deploy para Produ√ß√£o - Marketplace B2C
echo "üöÄ INICIANDO DEPLOY PARA PRODU√á√ÉO"
echo "=================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "artisan" ]; then
    echo "‚ùå Erro: Execute este script na raiz do projeto Laravel"
    exit 1
fi

echo "üìã Verificando ambiente..."

# 1. Verificar depend√™ncias de produ√ß√£o
echo "1. üì¶ Instalando depend√™ncias de produ√ß√£o..."
composer install --no-dev --optimize-autoloader

# 2. Instalar depend√™ncias NPM e build assets
echo "2. üé® Compilando assets para produ√ß√£o..."
npm ci
npm run build

# 3. Configurar arquivos de ambiente
echo "3. üîß Configurando ambiente de produ√ß√£o..."
if [ ! -f ".env" ]; then
    echo "   üìù Copiando .env.production para .env..."
    cp .env.production .env
else
    echo "   ‚ö†Ô∏è  Arquivo .env j√° existe. Verificque se est√° configurado para produ√ß√£o."
fi

# 4. Gerar chave da aplica√ß√£o se necess√°rio
if grep -q "APP_KEY=base64:GENERATE_NEW_KEY_FOR_PRODUCTION" .env; then
    echo "   üîë Gerando nova chave da aplica√ß√£o..."
    php artisan key:generate
fi

# 5. Otimiza√ß√µes de cache
echo "4. ‚ö° Aplicando otimiza√ß√µes de performance..."
php artisan config:cache
php artisan route:cache
php artisan view:cache
php artisan event:cache

# 6. Executar migra√ß√µes
echo "5. üóÑÔ∏è  Executando migra√ß√µes..."
php artisan migrate --force

# 7. Executar seeders cr√≠ticos (se necess√°rio)
echo "6. üå± Executando seeders de produ√ß√£o..."
php artisan db:seed --class=CategorySeeder --force
php artisan app:ensure-protected-users

# 8. Link do storage
echo "7. üîó Configurando link do storage..."
php artisan storage:link

# 9. Otimizar permiss√µes
echo "8. üîê Configurando permiss√µes..."
chmod -R 755 storage bootstrap/cache
chown -R www-data:www-data storage bootstrap/cache 2>/dev/null || echo "   ‚ö†Ô∏è  N√£o foi poss√≠vel alterar propriet√°rio (execute como root se necess√°rio)"

# 10. Verificar configura√ß√£o
echo "9. üîç Verificando configura√ß√£o final..."
php artisan app:check-consistency

echo ""
echo "‚úÖ DEPLOY CONCLU√çDO COM SUCESSO!"
echo "================================"
echo ""
echo "üîß PR√ìXIMOS PASSOS MANUAIS:"
echo "1. Configure seu servidor web (Nginx/Apache)"
echo "2. Configure certificado SSL (Let's Encrypt)"
echo "3. Configure backups autom√°ticos"
echo "4. Configure monitoramento"
echo "5. Teste todas as funcionalidades"
echo ""
echo "üìã VERIFICA√á√ïES IMPORTANTES:"
echo "- APP_DEBUG=false no .env"
echo "- APP_ENV=production no .env"  
echo "- Configurar credenciais reais do Mercado Pago"
echo "- Configurar email SMTP"
echo "- Configurar AWS S3 se usado"
echo "- Configurar Redis se usado"
echo ""
echo "üö® SEGURAN√áA:"
echo "- Remova arquivos de debug/teste"
echo "- Configure headers de seguran√ßa"
echo "- Configure firewall"
echo "- Configure rate limiting"